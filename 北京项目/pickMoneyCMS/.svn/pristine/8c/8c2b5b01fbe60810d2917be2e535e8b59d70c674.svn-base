<?php

/**
 * @Author: "Hulkzero"
 * @Date:   2018-10-22 13:53:21
 * @Email: "hulkzero@163.com"
 * @Last Modified time: 2018-10-25 13:35:32
 */

namespace app\h5\controller\check;

use think\Controller;
use think\facade\Request;


class CheckOut extends Controller
{
	
	public function home()
	{
		return view('check/CheckOut/home');
	}

	public function check()
	{
                // $request_value = Request::param();      // 获取全部的request变量（经过过滤）
                // // 获取请求的参数的值
                // $action  = $request_value['action'] = 'index';
                // $reqType = $request_value['reqType'] = '1';
                // $uid     = $request_value['uid'] = 100082;

                // //获取用户缓存信息，并组合json参数
                // $memcache = get_memcache();
                // $user_data = $memcache->get('user_data_' . $uid);
                // $user_data['auth'] = '61aac24b2ee9882c0ba26016b1c4b7db';
                $data_arr = [
                				'time'	=>	'00000',
                				'uid'	=>	'0000',
                				'auth'	=>	'00000',
                			];
                var_dump($data_arr);    
                $arr = array ('a'=>1,'b'=>2,'c'=>3,'d'=>4,'e'=>5);
                $a = json_encode($arr,  JSON_BIGINT_AS_STRING, 5);
                var_dump(json_last_error(), json_last_error_msg());
                // $b = json_last_error();
                        
                echo   $a;
         


                
		// return var_dump($paramData);
	}

        public function jsonFormat($data, $indent=null){

            // 对数组中每个元素递归进行urlencode操作，保护中文字符

            array_walk_recursive($data, 'jsonFormatProtect');

            // json encode

            $data = json_encode($data);

            // 将urlencode的内容进行urldecode

            $data = urldecode($data);

            // 缩进处理

            $ret = '';

            $pos = 0;

            $length = strlen($data);

            $indent = isset($indent)? $indent : '    ';

            $newline = "\n";

            $prevchar = '';

            $outofquotes = true;

            for($i=0; $i<=$length; $i++){

                $char = substr($data, $i, 1);

                if($char=='"' && $prevchar!='\\'){

                    $outofquotes = !$outofquotes;

                }elseif(($char=='}' || $char==']') && $outofquotes){

                    $ret .= $newline;

                    $pos --;

                    for($j=0; $j<$pos; $j++){

                        $ret .= $indent;

                    }

                }

                $ret .= $char;

                 

                if(($char==',' || $char=='{' || $char=='[') && $outofquotes){

                    $ret .= $newline;

                    if($char=='{' || $char=='['){

                        $pos ++;

                    }

                    for($j=0; $j<$pos; $j++){

                        $ret .= $indent;

                    }

                }

                $prevchar = $char;

            }

            return $ret;

        }

        /** 将数组元素进行urlencode

        * @param String $val

        */

        function jsonFormatProtect(&$val){

            if($val!==true && $val!==false && $val!==null){

                $val = urlencode($val);

            }

        }


        public function jss()
        {
                header('content-type:application/json;charset=utf8');

                $arr = array(

                    'status' => true,

                    'errMsg' => '',

                    'member' =>array(

                        array(

                            'name' => '李逍遥',

                            'gender' => '男'

                        ),

                        array(

                            'name' => '赵灵儿',

                            'gender' => '女'

                        )

                    )

                );

                echo $this->jsonFormat($arr);
        }

}
